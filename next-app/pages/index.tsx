import type { NextPage } from 'next';
import Head from 'next/head';
import Image from 'next/image';
import Link from 'next/link';
import { useRouter } from 'next/router';
import styles from '../styles/Home.module.css';
import { format } from 'url';
import { NextApiRequest, NextApiResponse } from 'next';

let counter = 0;

export async function getServerSideProps({
  req,
  res
}: {
  req: NextApiRequest;
  res: NextApiResponse;
}) {
  // Caching
  res.setHeader(
    'Cache-Control',
    'public, s-maxage=10, stale-while-revalidate=59'
  );

  counter++;
  return { props: { initialPropsCounter: counter } };
}

const Home: NextPage = () => {
  const router = useRouter();
  const { pathname, query } = router;

  const reload = () => {
    router.push(format({ pathname, query }));
  };

  const incrementCounter = () => {
    const currentCounter = query.counter
      ? parseInt(query.counter as string)
      : 0;
    const href = `/?counter=${currentCounter + 1}`;

    router.push(href, href, { shallow: true });
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href='https://nextjs.org'>Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.tsx</code>
        </p>

        <ul>
          <li>
            <Link href='/post/id'>
              <a>Go to pages/post/[pid].js</a>
            </Link>
          </li>
          <li>
            <Link href='/post/id?foo=bar'>
              <a>Also goes to pages/post/[pid].js</a>
            </Link>
          </li>
          <li>
            <Link href='/post/id/a-comment'>
              <a>Go to pages/post/[pid]/[comment].js</a>
            </Link>
          </li>
        </ul>

        <button onClick={reload}>Reload</button>
        <button onClick={incrementCounter}>Change State Counter</button>
        <p>{`getServerSideProps ran for initialPropsCounter times.`}</p>
        <p>Counter: {query.counter || 0}.</p>
      </main>

      <footer className={styles.footer}>
        <a
          href={
            'https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app'
          }
          target='_blank'
          rel='noopener noreferrer'
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src='/vercel.svg' alt='Vercel Logo' width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
};

export default Home;
